#!/usr/bin/env python3

# Use this script with the CSV profile data generated by -tdy_timers.
# You can run it with various options to inspect profiling results.

def usage():
    print('tdyprof: Usage:')
    print('tdyprof <profile.csv> <command> [options]\n')
    print('Commands are:')
    print('  topN - Show the N entries that take the most time.')
    exit()

def parse_csv(csv_file):
    import io, csv
    with open(csv_file, 'r') as f:
        data = csv.DictReader(f)
        rows = [r for r in data]
        return rows

def topN(data, N):
    if len(data) == 0:
        return
    print('tdyprof: showing top %d hits:'%N)
    columns = ['Stage Name', 'Event Name', 'Time', 'FLOP']
    print('{: >20} {: >40} {: >10} {: >16}'.format(*columns))
    sorted_rows = sorted(data, key = lambda row: float(row['Time']), reverse=True)
    for i in range(N):
        row = [sorted_rows[i][c][:40] for c in columns]
        print('{: >20} {: >40} {: >10} {: >16}'.format(*row))

def main():
    import sys
    if len(sys.argv) < 3:
        usage()

    csv_file = sys.argv[1]
    data = parse_csv(csv_file)

    # Execute the given command.
    command = sys.argv[2]
    if command.startswith('top'):
        N = int(command[3:])
        topN(data, N)
if __name__ == '__main__':
    main()
